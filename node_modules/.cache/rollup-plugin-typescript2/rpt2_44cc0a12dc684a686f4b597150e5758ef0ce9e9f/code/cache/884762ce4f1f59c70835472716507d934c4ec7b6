{"code":"import { useState, useEffect } from \"react\";\n/**\n * Custom hook that returns a debounced value.\n *\n * @template T - The type of the value.\n * @param {T} value - The value to be debounced.\n * @param {number} delay - The delay in milliseconds before updating the debounced value.\n * @returns {T} - The debounced value.\n */\nvar useDebouncedValue = function (value, delay) {\n    var _a = useState(value), debouncedValue = _a[0], setDebouncedValue = _a[1];\n    useEffect(function () {\n        var handler = setTimeout(function () {\n            setDebouncedValue(value);\n        }, delay);\n        return function () {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n    return debouncedValue;\n};\nexport default useDebouncedValue;\n","references":["/Users/alxgb/Code/tsui-kit/node_modules/@types/react/index.d.ts"],"dtsmap":{"name":"/Users/alxgb/Code/tsui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/hooks/useDebouncedValue.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"useDebouncedValue.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/useDebouncedValue.tsx\"],\"names\":[],\"mappings\":\"AAEA;;;;;;;GAOG;AACH,QAAA,MAAM,iBAAiB,aAAe,CAAC,SAAS,MAAM,KAAG,CAcxD,CAAC;AAEF,eAAe,iBAAiB,CAAC\"}"},"dts":{"name":"/Users/alxgb/Code/tsui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/hooks/useDebouncedValue.d.ts","writeByteOrderMark":false,"text":"/**\n * Custom hook that returns a debounced value.\n *\n * @template T - The type of the value.\n * @param {T} value - The value to be debounced.\n * @param {number} delay - The delay in milliseconds before updating the debounced value.\n * @returns {T} - The debounced value.\n */\ndeclare const useDebouncedValue: <T>(value: T, delay: number) => T;\nexport default useDebouncedValue;\n//# sourceMappingURL=useDebouncedValue.d.ts.map"}}
