{"code":"import { useState, useEffect } from \"react\";\n/**\n * Custom hook that returns the current window size.\n *\n * @returns The current window size object containing the width and height.\n */\nvar useWindowSize = function () {\n    var _a = useState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n    }), windowSize = _a[0], setWindowSize = _a[1];\n    useEffect(function () {\n        var handleResize = function () {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        };\n        window.addEventListener(\"resize\", handleResize);\n        return function () {\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, []);\n    return windowSize;\n};\nexport default useWindowSize;\n","references":["/Users/alxgb/Code/tsui-kit/node_modules/@types/react/index.d.ts"],"dtsmap":{"name":"/Users/alxgb/Code/tsui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/hooks/useWindowSize.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"useWindowSize.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/useWindowSize.tsx\"],\"names\":[],\"mappings\":\"AAEA,UAAU,UAAU;IAClB,KAAK,EAAE,MAAM,CAAC;IACd,MAAM,EAAE,MAAM,CAAC;CAChB;AAED;;;;GAIG;AACH,QAAA,MAAM,aAAa,QAAO,UAqBzB,CAAC;AAEF,eAAe,aAAa,CAAC\"}"},"dts":{"name":"/Users/alxgb/Code/tsui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/hooks/useWindowSize.d.ts","writeByteOrderMark":false,"text":"interface WindowSize {\n    width: number;\n    height: number;\n}\n/**\n * Custom hook that returns the current window size.\n *\n * @returns The current window size object containing the width and height.\n */\ndeclare const useWindowSize: () => WindowSize;\nexport default useWindowSize;\n//# sourceMappingURL=useWindowSize.d.ts.map"}}
