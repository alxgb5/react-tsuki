{"code":"/**\n * Creates a throttled version of a function that limits the rate at which the function can be called.\n *\n * @template T - The type of the original function.\n * @param {T} func - The original function to be throttled.\n * @param {number} limit - The time limit (in milliseconds) between function invocations.\n * @returns {(...args: Parameters<T>) => void} - The throttled version of the original function.\n */\nvar throttle = function (func, limit) {\n    var lastFunc;\n    var lastRan;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!lastRan) {\n            func.apply(void 0, args);\n            lastRan = Date.now();\n        }\n        else {\n            clearTimeout(lastFunc);\n            lastFunc = setTimeout(function () {\n                if (Date.now() - lastRan >= limit) {\n                    func.apply(void 0, args);\n                    lastRan = Date.now();\n                }\n            }, limit - (Date.now() - lastRan));\n        }\n    };\n};\nexport default throttle;\n","references":[],"dtsmap":{"name":"/Users/alxgb/Code/tsui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/utils/throttle.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"throttle.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/throttle.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;GAOG;AACH,QAAA,MAAM,QAAQ,uBAAwB,GAAG,EAAE,KAAK,IAAI,QAC5C,CAAC,SACA,MAAM,KACZ,CAAC,CAAC,GAAG,IAAI,EAAE,WAAW,CAAC,CAAC,KAAK,IAAI,CAkBnC,CAAC;AAEF,eAAe,QAAQ,CAAC\"}"},"dts":{"name":"/Users/alxgb/Code/tsui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/utils/throttle.d.ts","writeByteOrderMark":false,"text":"/**\n * Creates a throttled version of a function that limits the rate at which the function can be called.\n *\n * @template T - The type of the original function.\n * @param {T} func - The original function to be throttled.\n * @param {number} limit - The time limit (in milliseconds) between function invocations.\n * @returns {(...args: Parameters<T>) => void} - The throttled version of the original function.\n */\ndeclare const throttle: <T extends (...args: any[]) => void>(func: T, limit: number) => ((...args: Parameters<T>) => void);\nexport default throttle;\n//# sourceMappingURL=throttle.d.ts.map"}}
