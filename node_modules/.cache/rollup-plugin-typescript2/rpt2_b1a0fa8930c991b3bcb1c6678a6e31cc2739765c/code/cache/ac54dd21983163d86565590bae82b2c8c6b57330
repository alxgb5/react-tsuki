{"code":"/**\n * Formats a given date object into a string based on the provided format.\n * @param date - The date object to be formatted.\n * @param format - The format string specifying the desired output format.\n * @returns The formatted date string.\n */\nvar formatDate = function (date, format) {\n    var map = {\n        MM: (\"0\" + (date.getMonth() + 1)).slice(-2),\n        DD: (\"0\" + date.getDate()).slice(-2),\n        YYYY: date.getFullYear().toString(),\n        HH: (\"0\" + date.getHours()).slice(-2),\n        mm: (\"0\" + date.getMinutes()).slice(-2),\n        ss: (\"0\" + date.getSeconds()).slice(-2),\n    };\n    return format.replace(/MM|DD|YYYY|HH|mm|ss/g, function (matched) { return map[matched]; });\n};\nexport default formatDate;\n","references":[],"dtsmap":{"name":"/Users/alxgb/Code/tsui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/utils/formatDate.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"formatDate.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/formatDate.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;GAKG;AACH,QAAA,MAAM,UAAU,SAAU,IAAI,UAAU,MAAM,KAAG,MAWhD,CAAC;AAEF,eAAe,UAAU,CAAC\"}"},"dts":{"name":"/Users/alxgb/Code/tsui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/utils/formatDate.d.ts","writeByteOrderMark":false,"text":"/**\n * Formats a given date object into a string based on the provided format.\n * @param date - The date object to be formatted.\n * @param format - The format string specifying the desired output format.\n * @returns The formatted date string.\n */\ndeclare const formatDate: (date: Date, format: string) => string;\nexport default formatDate;\n//# sourceMappingURL=formatDate.d.ts.map"}}
