{"code":"import { useState, useCallback } from \"react\";\n/**\n * A custom hook that provides a boolean state value and a function to toggle the state value.\n *\n * @param initialValue - The initial value of the boolean state. Defaults to `false`.\n * @returns A tuple containing the boolean state value and the toggle function.\n */\nvar useToggle = function (initialValue) {\n    if (initialValue === void 0) { initialValue = false; }\n    var _a = useState(initialValue), value = _a[0], setValue = _a[1];\n    /**\n     * Toggles the boolean state value.\n     */\n    var toggle = useCallback(function () {\n        setValue(function (v) { return !v; });\n    }, []);\n    return [value, toggle];\n};\nexport default useToggle;\n","references":["/Users/alxgb/Code/tsui-kit/node_modules/@types/react/index.d.ts"],"dtsmap":{"name":"/Users/alxgb/Code/tsui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/hooks/useToggle.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"useToggle.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/useToggle.tsx\"],\"names\":[],\"mappings\":\"AAEA;;;;;GAKG;AACH,QAAA,MAAM,SAAS,kBAAkB,OAAO,KAAW,CAAC,OAAO,EAAE,MAAM,IAAI,CAWtE,CAAC;AAEF,eAAe,SAAS,CAAC\"}"},"dts":{"name":"/Users/alxgb/Code/tsui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/hooks/useToggle.d.ts","writeByteOrderMark":false,"text":"/**\n * A custom hook that provides a boolean state value and a function to toggle the state value.\n *\n * @param initialValue - The initial value of the boolean state. Defaults to `false`.\n * @returns A tuple containing the boolean state value and the toggle function.\n */\ndeclare const useToggle: (initialValue?: boolean) => [boolean, () => void];\nexport default useToggle;\n//# sourceMappingURL=useToggle.d.ts.map"}}
