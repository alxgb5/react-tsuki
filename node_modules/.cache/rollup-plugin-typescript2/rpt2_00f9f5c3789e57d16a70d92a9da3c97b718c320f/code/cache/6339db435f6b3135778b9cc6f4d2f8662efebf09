{"code":"import { __awaiter, __generator } from \"tslib\";\nimport { useState, useCallback } from \"react\";\n/**\n * Custom hook for making DELETE requests.\n *\n * @template T - The type of the response data.\n * @param {string} url - The URL to send the DELETE request to.\n * @returns {{\n *   deleteData: () => Promise<void>;\n *   response: T | null;\n *   loading: boolean;\n *   error: Error | null;\n * }} - An object containing the deleteData function, response data, loading state, and error state.\n */\nvar useDelete = function (url) {\n    var _a = useState(null), response = _a[0], setResponse = _a[1];\n    var _b = useState(false), loading = _b[0], setLoading = _b[1];\n    var _c = useState(null), error = _c[0], setError = _c[1];\n    /**\n     * Function to send the DELETE request.\n     *\n     * @returns {Promise<void>} - A promise that resolves when the DELETE request is complete.\n     */\n    var deleteData = useCallback(function () { return __awaiter(void 0, void 0, void 0, function () {\n        var res, result, err_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    setLoading(true);\n                    setError(null);\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 4, 5, 6]);\n                    return [4 /*yield*/, fetch(url, {\n                            method: \"DELETE\",\n                        })];\n                case 2:\n                    res = _a.sent();\n                    return [4 /*yield*/, res.json()];\n                case 3:\n                    result = _a.sent();\n                    setResponse(result);\n                    return [3 /*break*/, 6];\n                case 4:\n                    err_1 = _a.sent();\n                    setError(err_1);\n                    return [3 /*break*/, 6];\n                case 5:\n                    setLoading(false);\n                    return [7 /*endfinally*/];\n                case 6: return [2 /*return*/];\n            }\n        });\n    }); }, [url]);\n    return { deleteData: deleteData, response: response, loading: loading, error: error };\n};\nexport default useDelete;\n","references":["/Users/alxgb/Code/tsui-kit/node_modules/@types/react/index.d.ts"],"dtsmap":{"name":"/Users/alxgb/Code/tsui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/hooks/fetch/useDelete.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"useDelete.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/hooks/fetch/useDelete.tsx\"],\"names\":[],\"mappings\":\"AAEA;;;;;;;;;;;GAWG;AACH,QAAA,MAAM,SAAS,WACR,MAAM,KACV;IACD,UAAU,EAAE,MAAM,QAAQ,IAAI,CAAC,CAAC;IAChC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC;IACnB,OAAO,EAAE,OAAO,CAAC;IACjB,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC;CA4BrB,CAAC;AAEF,eAAe,SAAS,CAAC\"}"},"dts":{"name":"/Users/alxgb/Code/tsui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/hooks/fetch/useDelete.d.ts","writeByteOrderMark":false,"text":"/**\n * Custom hook for making DELETE requests.\n *\n * @template T - The type of the response data.\n * @param {string} url - The URL to send the DELETE request to.\n * @returns {{\n *   deleteData: () => Promise<void>;\n *   response: T | null;\n *   loading: boolean;\n *   error: Error | null;\n * }} - An object containing the deleteData function, response data, loading state, and error state.\n */\ndeclare const useDelete: <T>(url: string) => {\n    deleteData: () => Promise<void>;\n    response: T | null;\n    loading: boolean;\n    error: Error | null;\n};\nexport default useDelete;\n//# sourceMappingURL=useDelete.d.ts.map"}}
